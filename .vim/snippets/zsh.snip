# #!/bin/zsh
snippet #!
    #!/bin/zsh

snippet if
    if ${1:condition}; then
        ${2:# statements}
    fi
snippet ife
    if ${1:condition}; then
        ${2:# statements}
    else
        ${3:# statements}
    fi
snippet elif
    elif ${1:condition} ; then
        ${2:# statements}
snippet for
    for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
        ${3:# statements}
    done
snippet fori
    for ${1:needle} in ${2:haystack} ; do
        ${3:#statements}
    done
snippet fore
    for ${1:item} in ${2:list}; do
        ${3:# statements}
    done
snippet wh
    while ${1:condition}; do
        ${2:# statements}
    done
snippet until
    until ${1:condition}; do
        ${2:# statements}
    done
snippet repeat
    repeat ${1:integer}; do
        ${2:# statements}
    done
snippet case
    case ${1:word} in
        ${2:pattern})
            ${3};;
    esac
snippet select
    select ${1:answer} in ${2:choices}; do
        ${3:# statements}
    done
snippet (
    ( ${1:#statements} )
snippet {
    { ${1:#statements} }
snippet [
    [[ ${1:test} ]]
snippet always
    { ${1:try} } always { ${2:always} }
snippet fun
    function ${1:name} (${2:args}) {
        ${3:# body}
    }


# Shebang. Executing zsh via /usr/bin/env makes scripts more portable.
snippet #!/usr
abbr    Shebang: #!/usr/bin/env zsh
options     head
    #!/usr/bin/env bash

snippet     cwd
abbr        Set current working directory
    cwd=$(cd "$(dirname "d0")" && pwd)

snippet     cmd_path
abbr        Set command path
    cmd_path=$(cd "$(dirname "d0")" && pwd)/$(basename "d0")

snippet iftype
abbr    Check whether the command exists
    if type ${1:cmd} > /dev/null 2>&1; then

    fi

snippet redirect1
abbr    Don't display STDOUT
    > /dev/null

snippet redirect2
abbr    Don't display both STDOUT and STDERROR
    > /dev/null 2>&1

snippet redirect3
abbr    STDOUT > STDERROR (for print error)
    1>&2

snippet ostype
abbr    Identifies OSTYPE
    case "${OSTYPE}" in
        # BSD or OS X
        freebsd*|darwin*)
        ;;
        # Linux
        linux*)
        ;;
    esac

snippet sedspace
abbr    Deletes leading spaces
    | sed 's/^[ \t]*//'

snippet     source
abbr        source file after checking whether it exists
    if [ -f ${1:file} ]; then
        source ${2:file}
    fi

snippet     usage
abbr        Usage command
    usage() {
        echo "Usage: ${0} [-a] [target]"
        echo '  -a : what'
    }

snippet     getopts
abbr        Analyizes options
    while getopts as option; do
        case $option in
            a)
                opt_a="true"
                opt_a_arg=$OPTARG
                ;;
            :|\?)
                usage
                exit 1
                ;;
        esac
    done
    shift $(expr ${OPTIND} - 1)

snippet     debug
abbr        debug mode
options     head
    op
    ## debug mode
    #DEBUG="yes"
    if [ "$DEBUG" = "yes" ]; then
        set -x
    fi
