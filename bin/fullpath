#!/bin/bash
#
#  引数に指定したファイル or ディレクトリの絶対パスを表示
#  引数未指定の場合はカレントディレクトリの絶対パスを表示
#
#  オプション
#    -a : ホームディレクトリのパスを~に変換
#    -s : シンボリックリンクを解決(実体パスを取得)
#

usage() {
  echo "Usage: ${0} [-a] [target...]"
  echo '  -a : convert home directory path into ~'
  echo '  -s : resolve all symbolic links'
}

print_fullpath() {
    local target=$1
    if ! [ -e "$target" ]; then
        echo "Error: Not found ($target)" 1>&2
        return 1
    fi

    if [ "$opt_s" = 'true' -a -h "$target" ]; then
        case "$(uname -s)" in
            Darwin|FreeBSD)
                target=$(readlink -n "$target")

                ;;
            *)
                target=$(readlink -fq "$target")
                ;;
        esac
    fi

    local fullpath
    if [ -d "$target" ]; then
        if [ "$opt_s" = 'true' ]; then
            fullpath=$(cd "$target" && pwd -P)
        else
            fullpath=$(cd "$target" && pwd -L)
        fi
    else
        local dir
        local base
        if [ "$opt_s" = 'true' ]; then
            dir=$(cd "$(dirname "$target")" && pwd -P)
        else
            dir=$(cd "$(dirname "$target")" && pwd -L)
        fi
        dir=${dir%/}
        base=$(basename "$target")
        base=${base%/}
        fullpath="$dir"/"$base"
    fi

    # $HOMEを~に変換
    if [ "$opt_a" = "true" ]; then
        fullpath_del_home=${fullpath#$HOME}
        if [ "$fullpath" != "$fullpath_del_home" ]; then
            fullpath='~'"${fullpath_del_home:-/}"
        fi
    fi

    echo "$fullpath"
}

### Main ###

# オプション解析
while getopts as option; do
    case $option in
        a)
            opt_a="true"
            ;;
        s)
            opt_s="true"
            ;;
        :|\?)
            usage
            exit 1
            ;;
    esac
done
shift $((${OPTIND} - 1))

if [ $# -eq 0 ]; then
    set "$(pwd)"
fi

ret=0
for target in "$@"; do
    print_fullpath "$target" || ret=1
done

exit $ret

