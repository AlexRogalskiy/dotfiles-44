#!/bin/bash
#
#    Git Local Repository と Reremote Ripository の
#    差分コミットリストを表示
#

if ! type git > /dev/null 2>&1; then
    echo 'Error: Git is not installed' 2>&1
    exit 1
fi

if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" != "true" ]; then
    echo 'Error: Not a git repository' 2>&1
    exit 1
fi

# HEADのブランチ名(refs/heads/<branch-name>)を取得
head_branch=$(git symbolic-ref -q --short HEAD)
#echo "head_branch=$head_branch"
if [ -z "$head_branch" ]; then
    prehash=$(git rev-parse --short HEAD)
    echo 'Not on any branch : prehash=$prehash'
    exit 1
fi

# HEADブランチのリモートリポジトリ名を取得
remote_name=$(git config branch."${head_branch}".remote)
#echo "remote_name=$remote_name"

if [ -z "$remote_name" ]; then
    echo 'No remote repository'
    exit 1
fi

# マージ先ブランチ名を取得
merge_name=$(git config branch."${branch}".merge)
#echo "merge_name=$merge_name"

if [ "$remote_name" = '.' ]; then
    # local ??
    remote_ref=$merge_name
else
    merge_name=$(echo "$merge_name" | sed -E s/^.\{11\}//g)
    remote_ref=$(printf "refs/remotes/%s/%s" "$remote_name" "$merge_name")
fi

# リモートとローカルHEADの間にあるコミットハッシュの一覧を取得
rev_git=$(git rev-list --left-right $(printf %s...HEAD $remote_ref))

rev_list=$rev_git

# 差分コミットの総数
#behead=$(echo "$rev_list" | wc -l | sed 's/ //g')
behead=$(git rev-list --count $(printf %s...HEAD $remote_ref))

# ローカルにしかないコミット数をカウント
#ahead_lines=$(echo "$rev_list" | sed  '/^[^>]/d')
#ahead=$(echo "$ahead_lines" | wc -l | sed 's/ //g')
ahead=$(git rev-list --right-only --count $(printf %s...HEAD $remote_ref))

# リモートにしかないコミット数をカウント
#behind=$((behead - ahead))
behind=$(git rev-list --left-only --count $(printf %s...HEAD $remote_ref))

echo "$head_branch...$remote_ref"
echo "$ahead ahead : $behind behind"
echo '--- Different Commit List ---'
echo '( >xxx... : Ahead, <yyy... : Behind )'
echo "$rev_list"
